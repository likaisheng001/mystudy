命令模式：
    命令模式是对命令的封装，每一个命令都是一个操作：请求的一方发出请求要求执行一个操作；接收的一方收到请求，
    并执行操作。命名模式解耦了请求方和发送方，请求方只需请求执行命令，不用关心命令是怎样被接收，
    怎样被操作以及是否被执行...等等。
    本质：解耦命令请求与处理。
    总结：通过将请求抽象处理，达到解耦请求方和调用方的目的。

命令模式在生活场景中的应用：
    遥控器
    餐厅点菜单

命令模式的适用场景：
1.现实语义中具备"命令"的操作(比如命令菜单,shell命令...)
2.请求调用者和请求的接收者需要解耦，使得调用者和接收者不直接交互；
3.需要抽象出等待执行的行为，比如撤消(Undo)操作和恢复(Redo)等操作；
4.需要支持命令宏(即命令组合操作)

源码溯源：
    java.lang.Runnable/Thread

命令模式的优点：
1.通过引入中间件(抽象接口),解耦了命令请求与实现
2.扩展性良好，可以很容易地增加新命令
3.支持组合命令，支持命令队列
4.可以在现有命令的基础上，增加额外功能(比如日志记录...组合装饰器模式更酸爽)

命令模式的缺点：
1.具体命令类可能过多
2.增加了程序的复杂度，理解更加困难