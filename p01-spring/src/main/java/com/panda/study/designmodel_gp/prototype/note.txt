原型模式：原型模式的核心是对象克隆\对象复制。对象克隆有两种情况：深拷贝和浅拷贝。
          调用者不需要知道任何创建细节，不用调用构造函数。

原型模式的应用场景：
1. 类初始化消耗资源较多。
2. new产生的一个对象需要非常繁琐的过程(数据准备、访问权限等)
3. 构造函数比较复杂。
4. 循环体中生存大量对象时。

源码应用：
    1.ArrayList
    2.HashMap

原型模式的优点：
    性能优良，Java自带的。原型模式，是基于内存二进制流的拷贝，比直接new一个对象性能上提升了许多。
    可以使用深克隆方式保存对象的状态，使用原型模式将对象复制一份并将其状态保存起来，简化了创建过程。

总结：
    浅克隆：Clonable都是浅克隆。应用少。
    深克隆：序列号/转JSON。
    原型和单例不能同时存在。
