装饰器模式：
    装饰器模式也叫包装模式，是指在不改变原有对象的基础上，将功能附加到对象上，
    提供了比继承更有弹性的替代方案(扩展原有对象的功能)
    总结：通过装饰器动态扩展类的功能。装饰器是继承的有力补充，比继承灵活。

源码应用：
    流,例如BufferedReader
    org.springframework.cache.transaction.TransactionAwareCacheDecorator
    org.apache.ibatis.cache.

生活场景：
    煎饼+烤肠+鸡翅

装饰器模式和代理模式对比：
1.装饰器模式就是一种特殊的代理模式
2.装饰器模式强调自身的功能扩展，透明的扩展，可动态定制的扩展。
3.代理模式强调代理过程的控制

装饰器模式的缺点：
    会出现更多的代码，更多的类，增加程序复杂性。
    动态装饰时，多层装饰会更复杂。

权限管理：
1.RBAC（Role-Based Access Control） 基于角色的访问控制
2.装饰器模式提供了一种新的权限管理思路