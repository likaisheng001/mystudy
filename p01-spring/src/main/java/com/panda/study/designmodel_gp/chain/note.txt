责任链模式：
    责任链模式是将链中每一个节点看作一个对象，每个节点处理的请求均相同，且内部自动维护一个下一个节点。
    当一个请求从链式的首端发出时，会沿着链的路径依次传递给每一个节点对象，直至有对象处理这个请求为止。
    总结：责任链模式，很有模块化设计的感觉。

责任链模式在生活场景中的应用
    工作生活中的审批流程(踢皮球)
    过五关斩六将

策略模式和责任链模式的区别：
    策略模式，程序只执行一段代码。策略模式，程序从多种策略中选择一种执行。
    责任链模式，程序执行一串代码。思考，可以将一个业务流上的功能抽取成一个个模块，然后串成一个链。
    比如：用户发起一个请求。请求交给一个处理链(登录模块、业务模块、数据库模块、日志模块)等等，请求挨着链走一遍。

责任链模式的适用场景
    1.多个对象可以处理同一请求，但具体由哪个对象处理则在运行时动态决定；
    2.在不明确指定接收者的情况下，向多个对象中的一个提交一个请求
    3.可动态指定一组对象处理请求。

源码溯源：
    javax.servlet.Filter
    io.netty.channel.ChannelPipeline 编、解码 - 串行化处理
    权限安全校验框架中，大量使用责任链。
    Spring Security/Apache Shiro

责任链模式的优点：
1.将请求与处理解耦
2.请求处理者(节点对象)只需关注自己感兴趣的请求进行处理即可，对于不感兴趣的请求，直接转发给下一级节点对象。
3.具备链式传递处理请求功能，请求发送者无需知晓链路结构，只需等待请求处理结果。
4.链式结构灵活，可以通过改变链路结构动态地新增或删减责任。
5.易于扩展新的请求处理类(节点)，符合开闭原则。

责任链模式的缺点：
1.责任链太长或者时间过长，会影响整体性能
2.如果节点对象存在循环引用时，会造成死循环，导致系统崩溃。