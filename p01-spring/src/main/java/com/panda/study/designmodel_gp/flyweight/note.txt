享元模式：
    享元模式又称为轻量级模式，是对象池的一种实现。
    总结：享元模式将现有资源重复利用起来，从而改善应用所需的对象的结构的方式。
    总结：享元模式的核心是资源的重复利用。通过重复利用资源，减少创建资源的代价，提高效率。
    享元模式大部分情况都是和工厂模式一起使用的。

享元模式的状态：
    内部状态：不随环境的改变而改变，是不可共享的状态。例如在连接池中链接的url,username,password...
    外部状态: 随外部环境改变而改变。例如在连接池中链接的状态，是否被占用这类状态 ...

场景举例：
    各类房源共享
    全国社保联网
    刷票软件
        a.提前缓存用户信息(出发日期,出发地,目的地...)
        b.定时检查余票信息
        c.如果有票，将票放入共享池
        d.检查是否有票，有票直接抢票
    共享单车(内部状态：有没有坏、颜色、款式、编码；外部状态：是否被租用)
    共享车位(内部状态：人防车位、小车；外部状态：有没有被人占用)
    图书馆书籍管理

应用场景：
    缓存(原来缓存是用享元模式实现的) 注册式单例+工厂模式+享元模式 Cache
    池化技术 Pool
    jdk对字符串Integer的池化处理
    org.apache.commons.pool.ObjectPool