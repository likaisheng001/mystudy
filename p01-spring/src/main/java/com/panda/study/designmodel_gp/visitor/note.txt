访问者模式：
    访问者模式是一种将数据结构与数据操作分离的设计模式。是指封装一些作用于某种数据结构中的各元素的操作。
    特征：可以在不改变数据结构的前提下定义作用于这些元素的新的操作。
    总结：访问者模式中使用的双分派,访问者模式是最难的设计模式。
         访问者模式：访问者频繁改变，访问的对象(结构)不变。访问者独立于这个数据结构以外。
         例如：一家银行一旦落成，几乎不会改变。但是里面的工作人员和办理业务的用户却经常改变。
         访问者、元素经常改变，但是数据结构不变。

访问者模式的适用场景：
1.数据结构稳定，作用于数据结构的操作经常变化的场景；
2.需要数据结构与数据操作分离的场景；
3.需要对不同数据类型(元素)进行操作，而不使用分支判断具体类型的场景。

访问者模式在生活场景中的应用：
    参与KPI考核的人员(KPI考核标准不变，参与KPI考核的人员总再变)
    餐厅就餐人员(餐厅的菜单座位很少变，来就餐的人却经常换)

源码溯源：
    java.nio.file.FileVisitor / java.nio.file.SimpleFileVisitor
    org.springframework.beans.factory.config.BeanDefinitionVisitor

扩展：
1.静态分派 在编译阶段就已经知道分派的类型
2.动态分派 只要在运行时才能确定分派的类型
3.双分派